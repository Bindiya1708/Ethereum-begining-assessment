// SPDX-License-Identifier: MIT
pragma solidity 0.8.26;

contract MyToken {

    // Public variables
    string public name = "MyToken";          // Token Name
    string public symbol = "MTK";            // Token Abbreviation
    uint256 public totalSupply = 0;          // Total Supply initially set to 0

    // Mapping to store balances
    mapping(address => uint256) public balances;

    // Mint function to create new tokens
    function mint(address _to, uint256 _amount) public {
        totalSupply += _amount;               // Increase total supply
        balances[_to] += _amount;             // Increase balance of the recipient address
    }

    // Burn function to destroy tokens
    function burn(address _from, uint256 _amount) public {
        require(balances[_from] >= _amount, "Insufficient balance to burn"); // Ensure sufficient balance
        totalSupply -= _amount;               // Decrease total supply
        balances[_from] -= _amount;           // Decrease balance of the sender address
    }
}

